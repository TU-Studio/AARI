name: build_test

on:
  workflow_call:
  workflow_dispatch: # lets you run a build from github.com
  # Runs the workflow on all push events
  push:
  pull_request:
    branches:
      - main
      - develop

env:
  SCCACHE_GHA_ENABLED: "true"

# When pushing new commits, cancel any running builds on that branch
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_test:
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        include:
          - name: Linux-x86_64
            os: ubuntu-latest
          - name: macOS-x86_64
            os: macOS-latest
          - name: macOS-arm64
            os: macOS-latest
          - name: Windows-x86_64
            os: windows-latest

    runs-on: ${{ matrix.os }}
    steps:
      - name: get repo and submodules
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: setup
        uses: ./.github/actions/setup
      - name: build
        uses: ./.github/actions/build
        with:
          BUILD_TYPE: Release
          CMAKE_BUILD_PARALLEL_LEVEL: 4
          CMAKE_BUILD_ARGS: "-DBUILD_SHARED_LIBS=ON -DANIRA_WITH_INSTALL=ON"
      # TODO: Fix problem with windows ctest
          # CMAKE_BUILD_ARGS: "-DBUILD_SHARED_LIBS=ON -DANIRA_WITH_TESTS=ON -DANIRA_WITH_INSTALL=ON"
      # - name: test
      #   uses: ./.github/actions/test
      - name: install
        id: install
        uses: ./.github/actions/install
        with:
          BUILD_TYPE: Release
          PROJECT_NAME: anira
          DEV_ID_APP_CERT: ${{ secrets.DEV_ID_APP_CERT }}
          DEV_ID_APP_PWD: ${{ secrets.DEV_ID_APP_PWD }}
          DEV_ID_APP: ${{ secrets.DEV_ID_APP }}
      - name: final printout
        shell: bash
        run: |
          echo "All done"
          echo "PRODUCT_NAME=${{ steps.install.outputs.PRODUCT_NAME }}"
          echo "PACKAGE_DIR=${{ steps.install.outputs.PACKAGE_DIR }}"
          echo "PROJECT_VERSION=${{ steps.install.outputs.PROJECT_VERSION }}"
